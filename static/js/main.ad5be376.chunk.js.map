{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search/serach.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","width","alt","name","firstname","lastname","email","CardList","monsters","map","Search","onChangeEvent","placeholder","type","onChange","App","state","searchKey","fetch","then","response","json","user","setState","this","filteredArray","filter","toLowerCase","includes","console","log","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAGaA,EAAO,SAACC,GACnB,OACE,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,aACHC,MAAM,MACNC,IAAKN,EAAMG,QAAQI,KAAKC,YAE1B,+BACGR,EAAMG,QAAQI,KAAKC,UADtB,IACkCR,EAAMG,QAAQI,KAAKE,YAErD,4BAAIT,EAAMG,QAAQO,YCTXC,EAAW,SAACX,GACvB,OACE,qBAAKC,UAAU,YAAf,SACGD,EAAMY,SAASC,KAAI,SAACV,GAAD,OAClB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCNdU,G,MAAS,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,cAAiC,EAAlBC,YACtC,OACE,uBACEf,UAAU,SACVgB,KAAK,SACLC,SAAUH,EACVC,YAAY,kBCiCHG,E,kDAnCb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXR,SAAU,GACVS,UAAW,IAJD,E,qDAOd,WAAqB,IAAD,OAClBC,MAAM,kCACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAU,EAAKC,SAAS,CAAEf,SAAUc,S,oBAE9C,WAAU,IAAD,OACP,EAAgCE,KAAKR,MAA7BR,EAAR,EAAQA,SAAUS,EAAlB,EAAkBA,UACZQ,EAAgBjB,EAASkB,QAAO,SAAC3B,GAAD,OACpCA,EAAQI,KAAKC,UAAUuB,cAAcC,SAASX,EAAUU,kBAG1D,OADAE,QAAQC,IAAIL,GAEV,sBAAK5B,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CACEe,YAAY,iBACZD,cAAe,SAACoB,GACd,EAAKR,SAAS,CAAEN,UAAWc,EAAEC,OAAOC,QAAS,kBAC3CJ,QAAQC,IAAI,EAAKd,MAAMC,iBAI7B,cAAC,EAAD,CAAUT,SAAUiB,W,GA9BVS,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ad5be376.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./card.styles.css\";\n\nexport const Card = (props) => {\n  return (\n    <div className=\"card-container\">\n      <img\n        src={`https://robohash.org/${props.monster.id}?set=set3`}\n        width=\"200\"\n        alt={props.monster.name.firstname}\n      ></img>\n      <h5>\n        {props.monster.name.firstname} {props.monster.name.lastname}\n      </h5>\n      <p>{props.monster.email}</p>\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./card-list.css\";\n\nimport { Card } from \"../card/card.component\";\n\nexport const CardList = (props) => {\n  return (\n    <div className=\"card-list\">\n      {props.monsters.map((monster) => (\n        <Card key={monster.id} monster={monster}></Card>\n      ))}\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./search.styles.css\";\n\nexport const Search = ({ onChangeEvent, placeholder }) => {\n  return (\n    <input\n      className=\"search\"\n      type=\"search\"\n      onChange={onChangeEvent}\n      placeholder=\"placeholder\"\n    />\n  );\n};\n","import { Component } from \"react\";\nimport \"./App.css\";\n\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport { Search } from \"./components/search/serach.component\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchKey: \"\",\n    };\n  }\n  componentDidMount() {\n    fetch(\"https://fakestoreapi.com/users\")\n      .then((response) => response.json())\n      .then((user) => this.setState({ monsters: user }));\n  }\n  render() {\n    const { monsters, searchKey } = this.state;\n    const filteredArray = monsters.filter((monster) =>\n      monster.name.firstname.toLowerCase().includes(searchKey.toLowerCase())\n    );\n    console.log(filteredArray);\n    return (\n      <div className=\"App\">\n        <h1>Monster Roledex</h1>\n        <Search\n          placeholder=\"Search Monster\"\n          onChangeEvent={(e) => {\n            this.setState({ searchKey: e.target.value }, () =>\n              console.log(this.state.searchKey)\n            );\n          }}\n        ></Search>\n        <CardList monsters={filteredArray}></CardList>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}